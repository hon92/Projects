#include <iostream>
//#include <vld.h>
using namespace std;

struct uzel
{
  int cislo;
	uzel * next;
};
class seznam
{
public:
	seznam();
	~seznam();
	void add(int);
	void print();

private:
	void memory();#include <iostream>
//#include <vld.h>
using namespace std;

struct uzel
{
	int cislo;
	uzel * next;
};
class seznam
{
public:
	seznam();
	~seznam();
	void add(int);
	void print();
	bool find(int);
	void insert(int,int);
private:
	void memory();
	uzel *root;
	int pocet;


};
seznam::seznam()
{
	root=NULL;
	pocet=0;
}
seznam::~seznam()
{
	memory();
}
void seznam::add(int x)
{
	uzel * novy=new uzel;
	novy->cislo=x;
	novy->next=NULL;

	if(root==NULL)
	{
		root=novy;

	}
	else
	{
		uzel * tmp;
		tmp=root;
		while(tmp->next!=NULL)
		{
			tmp=tmp->next;
		}
		tmp->next=novy;
	}
	pocet++;
}
void seznam::print()
 {
	 uzel *tmp=root;
	while(tmp!=NULL)
	{
		cout<<tmp->cislo<<endl;
		tmp=tmp->next;
	}
}
void seznam::memory()
{
	uzel *tmp=root;
	uzel *x=root;
	while(tmp!=NULL && tmp->next!=NULL)
	{
		tmp=tmp->next;
		delete x;
		x=tmp;
	}
	if(x!=NULL)
		delete x;
}
bool seznam::find(int cislo)
{
	if(root==NULL)
		return false;
	else
	{
		uzel *tmp=root;
		while(tmp!=NULL)
		{
			if(tmp->cislo==cislo)
			{
				return true;
			}
			tmp=tmp->next;
		}
		return false;
	}
}
void seznam::insert(int cislo,int index)
{
	uzel *tmp=root;
	uzel *novy=new uzel;
	novy->cislo=cislo;

	if(index>pocet)
	{
		cout<<"error"<<endl;
		delete novy;
		return;
	}

	if(index==0)
	{
		uzel *x=root;
		root=novy;
		novy->next=x;
		pocet++;
		return;
	}
	
	while(index!=1)
	{
		tmp=tmp->next;
		index--;
	}
	uzel * docasny=tmp->next;
	tmp->next=novy;
	novy->next=docasny;
	pocet++;
}
int main()
{
	seznam list;
	
	list.add(5);
	list.add(2);
	list.add(8);
	list.add(10);
	//list.print();
	
	list.insert(0,0);
	list.insert(4,1);
	list.insert(7,2);
	list.insert(3,3);
	list.insert(11,5);
	list.print();
	return 0;
}
	uzel *root;


};
seznam::seznam()
{
	root=NULL;
}
seznam::~seznam()
{
	memory();
}
void seznam::add(int x)
{
	uzel * novy=new uzel;
	novy->cislo=x;
	novy->next=NULL;

	if(root==NULL)
	{
		root=novy;

	}
	else
	{
		uzel * tmp;
		tmp=root;
		while(tmp->next!=NULL)
		{
			tmp=tmp->next;
		}
		tmp->next=novy;
	}
}
void seznam::print()
 {
	 uzel *tmp=root;
	while(tmp!=NULL)
	{
		cout<<tmp->cislo<<endl;
		tmp=tmp->next;
	}
}
void seznam::memory()
{
	uzel *tmp=root;
	uzel *x=root;
	while(tmp!=NULL && tmp->next!=NULL)
	{
		tmp=tmp->next;
		delete x;
		x=tmp;
	}
	if(x!=NULL)
		delete x;
}
int main()
{
	seznam list;
	list.add(5);
	list.add(2);
	list.add(1);
	list.add(8);

	list.print();
	return 0;
}
